<div class="woocommerce-MyAccount-content tab-content" id="tab9">
	<div class="woocommerce-notices-wrapper"></div>


    <div class="shipping_address" style="">
										
        <span style="background-color: pink;border-radius: 50%;position:absolute;color: white ;padding:5px;width:15px;height:15px;display:flex;align-items: center;align-content: center;justify-content: center;" id="cartCount">0</span>

        <!--	<div class="woocommerce-shipping-fields__field-wrapper">
                            <p class="form-row form-row-first validate-required" id="shipping_first_name_field" data-priority="10"><label for="shipping_first_name" class="">Nome&nbsp;<abbr class="required" title="obrigatório">*</abbr></label><span class="woocommerce-input-wrapper"><input type="text" class="input-text " name="shipping_first_name" id="shipping_first_name" placeholder="" value="" autocomplete="given-name"></span></p><p class="form-row form-row-last validate-required" id="shipping_last_name_field" data-priority="20"><label for="shipping_last_name" class="">Sobrenome&nbsp;<abbr class="required" title="obrigatório">*</abbr></label><span class="woocommerce-input-wrapper"><input type="text" class="input-text " name="shipping_last_name" id="shipping_last_name" placeholder="" value="" autocomplete="family-name"></span></p><p class="form-row form-row-wide" id="shipping_company_field" data-priority="30"><label for="shipping_company" class="">Nome da empresa&nbsp;<span class="optional">(opcional)</span></label><span class="woocommerce-input-wrapper"><input type="text" class="input-text " name="shipping_company" id="shipping_company" placeholder="" value="" autocomplete="organization"></span></p><p class="form-row form-row-wide address-field update_totals_on_change validate-required" id="shipping_country_field" data-priority="40"><label for="shipping_country" class="">País&nbsp;<abbr class="required" title="obrigatório">*</abbr></label><span class="woocommerce-input-wrapper"><strong>Brasil</strong><input type="hidden" name="shipping_country" id="shipping_country" value="BR" autocomplete="country" class="country_to_state" readonly="readonly"></span></p><p class="form-row address-field validate-required validate-postcode form-row-wide" id="shipping_postcode_field" data-priority="45" data-o_class="form-row form-row-wide address-field validate-required validate-postcode"><label for="shipping_postcode" class="">CEP&nbsp;<abbr class="required" title="obrigatório">*</abbr></label><span class="woocommerce-input-wrapper"><input type="tel" class="input-text " name="shipping_postcode" id="shipping_postcode" placeholder="" value="" autocomplete="postal-code" maxlength="9"></span></p><p class="form-row address-field validate-required form-row-wide" id="shipping_address_1_field" data-priority="50"><label for="shipping_address_1" class="">Endereço&nbsp;<abbr class="required" title="obrigatório">*</abbr></label><span class="woocommerce-input-wrapper"><input type="text" class="input-text " name="shipping_address_1" id="shipping_address_1" placeholder="Nome da rua e número da casa" value="" autocomplete="address-line1" data-placeholder="Nome da rua e número da casa"></span></p><p class="form-row form-row-wide address-field validate-required" id="shipping_number_field" data-priority="55"><label for="shipping_number" class="">Número&nbsp;<abbr class="required" title="obrigatório">*</abbr></label><span class="woocommerce-input-wrapper"><input type="text" class="input-text " name="shipping_number" id="shipping_number" placeholder="" value=""></span></p><p class="form-row address-field form-row-wide" id="shipping_address_2_field" data-priority="60"><label for="shipping_address_2" class="screen-reader-text">Apartamento, suíte, unidade, etc.&nbsp;<span class="optional">(opcional)</span></label><span class="woocommerce-input-wrapper"><input type="text" class="input-text " name="shipping_address_2" id="shipping_address_2" placeholder="Apartamento, suíte, sala, etc. (opcional)" value="" autocomplete="address-line2" data-placeholder="Apartamento, suíte, sala, etc. (opcional)"></span></p><p class="form-row form-row-wide address-field" id="shipping_neighborhood_field" data-priority="65"><label for="shipping_neighborhood" class="">Bairro&nbsp;<span class="optional">(opcional)</span></label><span class="woocommerce-input-wrapper"><input type="text" class="input-text " name="shipping_neighborhood" id="shipping_neighborhood" placeholder="" value=""></span></p><p class="form-row address-field validate-required form-row-wide" id="shipping_city_field" data-priority="70" data-o_class="form-row form-row-last address-field validate-required"><label for="shipping_city" class="">Cidade&nbsp;<abbr class="required" title="obrigatório">*</abbr></label><span class="woocommerce-input-wrapper"><input type="text" class="input-text " name="shipping_city" id="shipping_city" placeholder="" value="" autocomplete="address-level2"></span></p><p class="form-row address-field validate-required validate-state form-row-wide" id="shipping_state_field" data-priority="80" data-o_class="form-row form-row-wide address-field validate-required validate-state"><label for="shipping_state" class="">Estado&nbsp;<abbr class="required" title="obrigatório">*</abbr></label><span class="woocommerce-input-wrapper"><select name="shipping_state" id="shipping_state" class="state_select select2-hidden-accessible" autocomplete="address-level1" data-placeholder="Selecione uma opção…" data-input-classes="" data-label="Estado" tabindex="-1" aria-hidden="true"><option value="">Selecione uma opção…</option><option value="AC">Acre</option><option value="AL">Alagoas</option><option value="AP">Amapá</option><option value="AM">Amazonas</option><option value="BA">Bahia</option><option value="CE">Ceará</option><option value="DF">Distrito Federal</option><option value="ES">Espírito Santo</option><option value="GO">Goiás</option><option value="MA">Maranhão</option><option value="MT">Mato Grosso</option><option value="MS">Mato Grosso do Sul</option><option value="MG">Minas Gerais</option><option value="PA">Pará</option><option value="PB">Paraíba</option><option value="PR">Paraná</option><option value="PE">Pernambuco</option><option value="PI">Piauí</option><option value="RJ">Rio de Janeiro</option><option value="RN">Rio Grande do Norte</option><option value="RS">Rio Grande do Sul</option><option value="RO">Rondônia</option><option value="RR">Roraima</option><option value="SC">Santa Catarina</option><option value="SP">São Paulo</option><option value="SE">Sergipe</option><option value="TO">Tocantins</option></select><span class="select2 select2-container select2-container--default" dir="ltr" style="width: 100%;"><span class="selection"><span class="select2-selection select2-selection--single" aria-haspopup="true" aria-expanded="false" tabindex="0" aria-label="Estado" role="combobox"><span class="select2-selection__rendered" id="select2-shipping_state-container" role="textbox" aria-readonly="true" title="São Paulo">São Paulo</span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span></span></span><span class="dropdown-wrapper" aria-hidden="true"></span></span></span></p></div>-->
                            <div id="order_review" class="woocommerce-checkout-review-order">
                              <div class="d-flex">
                                <div>
                              <label for="nameProduct" class="form-label">Nome da Bag</label>

                             <input type="text" id="nameProduct" required name="nameProduct">
                            </div>
                          <div>
                                <label for="formFile" class="form-label">Upload</label>
                                <input class="form-control" type="file" id="fileInputBag" onchange="handleFileSelectBag()">
                                <div class="col-md-6 d-none">
                                    <label for="inputEmail4" class="form-label d-none">Imagem da Bag</label>
                                    <input type="text" hidden name="photoBag" id="photoBag" class="form-control" id="inputEmail4">
                                  </div>
                                </div>
                                </div>
                                <h4 id="order_review_heading"></h4>
                                <div class="cart">
                                    <h2>Valor total da Bag</h2>
                                    <ul id="cart-items">
                                      <!-- Itens do carrinho serão adicionados aqui dinamicamente -->
                                    </ul>
                                    <p id="total">Total: R$ 0.00</p>
                                  </div>
                        <button onclick="saveBag()" type="button">Cadastrar Bag</button>
                            </div>
                            <div class="d-none" id="imagePreviewBag"></div>

        </div>
<input id="descr" type="hidden">

    <div class="products_wrapper mfn-woo-products isotope_wrapper default-woo-loop lm_wrapper">
        <ul class="products columns-3 grid d-flex" style="display: flex;">
            <%if(products){%>
                <%products.forEach(product=>{%>
    <input type="hidden" name="" id="" value="<%=product._id%>">
                        <li class="isotope-item align-center product type-product post-935 status-publish first instock product_cat-clube-de-assinatura has-post-thumbnail sale shipping-taxable purchasable product-type-subscription" >
    
        <div class="mfn-li-product-row mfn-li-product-row-image"><div class="image_frame scale-with-grid product-loop-thumb" ontouchstart="this.classList.toggle('hover');">
        <span class="onsale onsale-label">Promoção</span>
    <div class="image_wrapper ">
        <div class="mask"></div>
        <img width="1068" height="1068" src="<%=product.photo%>" class="image-primary scale-with-grid wp-post-image" alt="" decoding="async" fetchpriority="high" srcset="<%=product.photo%> 1068w, <%=product.photo%> 500w, <%=product.photo%> 300w, <%=product.photo%> 800w, <%=product.photo%> 1024w, <%=product.photo%> 150w, <%=product.photo%> 768w, <%=product.photo%> 146w, <%=product.photo%> 50w, <%=product.photo%> 75w, <%=product.photo%> 85w, <%=product.photo%> 80w" sizes="(max-width: 1068px) 100vw, 1068px" />
        <div class="image_links">
          
            <a rel="nofollow" style="width: 35%;"  data-id="5" data-name="<%=product.name%>" data-summary="summary 5" data-price="<%=product.price%>" data-size="<%=product.size%>" data-quantity="1" data-image="<%=product.photo%>" class="add-to-cart" onclick="addToCart('<%=product.name%>', <%=product.price%>, 1, '<%=product.size%>', '<%=product._id%>', '<%=product.photo%>')" class="add-to-cart btn btn-danger my-cart-btn add_to_cart_button ajax_add_to_cart product_type_simple">

        
                <span style="font-weight: 900;font-size: 25px;">+</span><svg viewBox="0 0 26 26"><defs><style>.path{fill:none;stroke:#333;stroke-miterlimit:10;stroke-width:1.5px;}</style></defs><polygon class="path" points="20.4 20.4 5.6 20.4 6.83 10.53 19.17 10.53 20.4 20.4"></polygon><path class="path" d="M9.3,10.53V9.3a3.7,3.7,0,1,1,7.4,0v1.23"></path></svg>
              </a>

               
            <a rel="nofollow" style="width: 35%;" data-id="5" data-name="<%=product.name%>" data-summary="summary 5" data-price="<%=product.price%>" data-size="<%=product.size%>" data-quantity="1" data-image="<%=product.photo%>" class="add-to-cart" onclick="decrementQuantity('<%=product._id%>')" class="add-to-cart btn btn-danger my-cart-btn add_to_cart_button ajax_add_to_cart product_type_simple">

        
              <span style="font-weight: 900;font-size: 25px;">-</span><svg viewBox="0 0 26 26"><defs><style>.path{fill:none;stroke:#333;stroke-miterlimit:10;stroke-width:1.5px;}</style></defs><polygon class="path" points="20.4 20.4 5.6 20.4 6.83 10.53 19.17 10.53 20.4 20.4"></polygon><path class="path" d="M9.3,10.53V9.3a3.7,3.7,0,1,1,7.4,0v1.23"></path></svg>
            </a>
                <a class="link" href="http://localhost:10018/produto/clube-iela-bag/"><svg viewBox="0 0 26 26"><defs><style>.path{fill:none;stroke:#333;stroke-miterlimit:10;stroke-width:1.5px;}</style></defs><g><path d="M10.17,8.76l2.12-2.12a5,5,0,0,1,7.07,0h0a5,5,0,0,1,0,7.07l-2.12,2.12" class="path"/><path d="M15.83,17.24l-2.12,2.12a5,5,0,0,1-7.07,0h0a5,5,0,0,1,0-7.07l2.12-2.12" class="path"/><line x1="10.17" y1="15.83" x2="15.83" y2="10.17" class="path"/></g></svg>
                </a>
            </div>
        </div>
 
                    <span class="product-loading-icon added-cart"></span>
                
            </div>
        </div>
        <div class="desc">
    
            <h4><a href="#"><%=product.name%></a> <%=product.size%></h4>
            
        <span class="price"><del aria-hidden="true"><span class="woocommerce-Price-amount amount"><bdi><span class="woocommerce-Price-currencySymbol">&#82;&#36;</span>&nbsp;<%=product.price%></bdi></span></del> <ins><span class="woocommerce-Price-amount amount"><bdi><span class="woocommerce-Price-currencySymbol">&#82;&#36;</span>&nbsp;<%=product.price%></bdi></span></ins> <span class="subscription-details"></span></span>
    <div class="mfn-li-product-row mfn-li-product-row-button hide-button"></div>
        </div>
    
    </li>
    <%})%>
                    <%}%>					
                    
        </ul>
    </div>

   

    <script type="text/javascript">
        const cart = [];
      
       const cartData = []
       const itemList = []
       const descr = document.getElementById('descr')


        itemCount = 0
        function addToCart(productName, price, quantity,size, id, photo) {
          // Converte o preço para ponto flutuante
          const priceFloat = parseFloat(price);
        
          // Verifica se o preço é um número válido
          if (isNaN(priceFloat) || priceFloat <= 0) {
            alert("Por favor, insira um preço válido.");
            return;
          }
        
          const item = {
            name: productName,
            price: priceFloat,
            quantity: quantity,
            size:size,
            photo:photo,
            description:`${quantity}x ${productName} R$ ${priceFloat},00`,
            id:id
          };
        //  descr.value = item.description
          // Verifica se o item já está no carrinho
          const existingItemIndex = cart.findIndex(cartItem => cartItem.name === productName);
        
          if (existingItemIndex !== -1) {
            // Se o item já está no carrinho, apenas atualiza a quantidade
            cart[existingItemIndex].quantity += quantity;
          } else {
            // Se o item não está no carrinho, adiciona-o
            cart.push(item);
            cartData.push(cart)
          }
        
          itemCount++;
          updateCart();
          updateTotal();
         
          console.log(cartData); 
          
        
        }


   
        function updateCart() {
          const cartList = document.getElementById('cart-items');
          const cartCount = document.getElementById('cartCount');
          // Limpa a lista do carrinho
          cartList.innerHTML = '';
        
          // Adiciona itens ao carrinho
          cart.forEach(item => {
            const listItem = document.createElement('li');
            listItem.style.listStyle = 'none';
            listItem.innerHTML = `${item.name} - R$ ${item.price.toFixed(2)} x ${item.quantity} ${item.size} <img style='width:25px;height:25px;' src="${item.photo}" alt="${item.name}">`;
            cartList.appendChild(listItem);
            let lt = cartList.textContent.replace(/$/, ' ')
            descr.value = lt
            itemList.push(lt)
            console.log(lt)
            if(item.quantity == 0){
              listItem.textContent = ''
            }
          
          });
        
      
        cartCount.innerText = itemCount;
        
        
        }
        
        function updateTotal() {
          const totalElement = document.getElementById('total');
        
          // Calcula o total
          const total = cart.reduce((acc, item) => acc + item.price * item.quantity, 0);
        
          // Atualiza o total
          totalElement.textContent = `Total: R$ ${total.toFixed(2)}`;
        }

        function decrementQuantity(itemId) {
  const itemIndex = cart.findIndex((item) => item.id === itemId);
  
  if (itemIndex !== -1 && cart[itemIndex].quantity > 0) {
    cart[itemIndex].quantity--;
    itemCount--

    updateCart();
    updateTotal();
    console.log(cart)
  }
}
     
        
          /*  function link_soft_scroll()
            {
                jQuery('a[href^="#"]').on('click', function(e) {
                    if(jQuery(this).hasClass('close')) return;
                    e.preventDefault();
                    var id = jQuery(this).attr('href'),
                            targetOffset = jQuery(id).offset();
                            
                    jQuery('html, body').animate({ 
                        scrollTop: targetOffset - 270
                    }, 1000);
                });
            }
            link_soft_scroll();*/
            </script>

<script>
    const totalElement = document.getElementById('total');
    const nameProduct = document.getElementById('nameProduct')
    const photoBag = document.getElementById('photoBag')
// Obtém o texto dentro do elemento
 

async function saveBag(){

    try {
        const totalText = totalElement.textContent;

// Usa expressão regular para extrair apenas os números e ponto decimal
const totalValue = parseFloat(totalText.match(/\d+\.\d+/)[0]);    
             // Enviar os produtos via Ajax para a rota '/registerBag'
    await fetch('/registerBag', {
method: 'POST',
headers: {
 'Content-Type': 'application/json',
},
body: JSON.stringify({ products:cart, name:nameProduct.value, price:totalValue, photo:photoBag.value, description:descr.value }), // Enviar os produtos como um objeto no corpo da requisição
})
.then(response => response.json())
.then(data => {
 console.log('Resposta do servidor:', data);
 // Realizar ações após receber a resposta do servidor, se necessário
})
.catch(error => {
 console.error('Erro:', error);
 // Lidar com possíveis erros na requisição
});
    } catch (error) {
        console.log(error)
    }


}

function handleFileSelectBag() {
      const fileInputBag = document.getElementById('fileInputBag');
      const imagePreviewBag = document.getElementById('imagePreviewBag');
      const photoBag = document.getElementById('photoBag');

      const fileBag = fileInputBag.files[0];

      if (fileBag) {
        const readerBag = new FileReader();
        
        readerBag.onload = function (e) {
          const base64StringBag = e.target.result;
          // Aqui você pode usar a string base64 conforme necessário
          console.log('String Base64:', base64StringBag);

          // Exibindo a imagem
          const imgBag = document.createElement('img');
          photoBag.value = base64StringBag
          imgBag.src = base64StringBag;
          imagePreviewBag.innerHTML = '';
          imagePreviewBag.appendChild(imgBag);
        };

        readerBag.readAsDataURL(fileBag);
      }
    }

 </script>

</div>